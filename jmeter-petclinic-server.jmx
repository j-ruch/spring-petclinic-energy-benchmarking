<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.6.3">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="PetClinic Load Generator">
      <boolProp name="TestPlan.serialize_threadgroups">true</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
        <collectionProp name="Arguments.arguments">
          <elementProp name="ENDPOINT_BASE" elementType="Argument">
            <stringProp name="Argument.name">ENDPOINT_BASE</stringProp>
            <stringProp name="Argument.value">${__P(ENDPOINT_BASE,localhost)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ENDPOINT_OWNERS" elementType="Argument">
            <stringProp name="Argument.name">ENDPOINT_OWNERS</stringProp>
            <stringProp name="Argument.value">${__P(ENDPOINT_OWNERS,/api/owners)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ENDPOINT_VETS" elementType="Argument">
            <stringProp name="Argument.name">ENDPOINT_VETS</stringProp>
            <stringProp name="Argument.value">${__P(ENDPOINT_VETS,/api/vets)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ENDPOINT_PETS" elementType="Argument">
            <stringProp name="Argument.name">ENDPOINT_PETS</stringProp>
            <stringProp name="Argument.value">${__P(ENDPOINT_PETS,/api/pets)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ENDPOINT_PETTYPES" elementType="Argument">
            <stringProp name="Argument.name">ENDPOINT_PETTYPES</stringProp>
            <stringProp name="Argument.value">${__P(ENDPOINT_PETTYPES,/api/pettypes)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ENDPOINT_PROTOCOL" elementType="Argument">
            <stringProp name="Argument.name">ENDPOINT_PROTOCOL</stringProp>
            <stringProp name="Argument.value">${__P(ENDPOINT_PROTOCOL,http)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ENDPOINT_PORT" elementType="Argument">
            <stringProp name="Argument.name">ENDPOINT_PORT</stringProp>
            <stringProp name="Argument.value">${__P(ENDPOINT_PORT,9966)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ENDPOINT_VISITS" elementType="Argument">
            <stringProp name="Argument.name">ENDPOINT_VISITS</stringProp>
            <stringProp name="Argument.value">${__P(ENDPOINT_VETS,/api/visits)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ENDPOINT_SPECIALITY" elementType="Argument">
            <stringProp name="Argument.name">ENDPOINT_SPECIALITY</stringProp>
            <stringProp name="Argument.value">${__P(ENDPOINT_SPECIALITY,/api/specialties)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </elementProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
    </TestPlan>
    <hashTree>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
        <collectionProp name="Arguments.arguments">
          <elementProp name="firstname" elementType="Argument">
            <stringProp name="Argument.name">firstname</stringProp>
            <stringProp name="Argument.value">FIRSTNAME</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="lastname" elementType="Argument">
            <stringProp name="Argument.name">lastname</stringProp>
            <stringProp name="Argument.value">LASTNAME</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="pet_name" elementType="Argument">
            <stringProp name="Argument.name">pet_name</stringProp>
            <stringProp name="Argument.value">MY_PET_NAME</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
        <collectionProp name="HeaderManager.headers">
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">accept</stringProp>
            <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
          </elementProp>
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">content-type</stringProp>
            <stringProp name="Header.value">application/json</stringProp>
          </elementProp>
        </collectionProp>
      </HeaderManager>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Owner Group" enabled="true">
        <intProp name="ThreadGroup.num_threads">5</intProp>
        <intProp name="ThreadGroup.ramp_time">0</intProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller">
          <stringProp name="LoopController.loops">100</stringProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
      </ThreadGroup>
      <hashTree>
        <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="Random Parameters" enabled="true">
          <collectionProp name="UserParameters.names">
            <stringProp name="783201284">telephone</stringProp>
          </collectionProp>
          <collectionProp name="UserParameters.thread_values">
            <collectionProp name="-508900343">
              <stringProp name="-1955109861"> ${__Random(9000000000,9999999999)}</stringProp>
            </collectionProp>
          </collectionProp>
          <boolProp name="UserParameters.per_iteration">false</boolProp>
        </UserParameters>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET Owners" enabled="true">
          <stringProp name="HTTPSampler.domain">${ENDPOINT_BASE}</stringProp>
          <stringProp name="HTTPSampler.port">${ENDPOINT_PORT}</stringProp>
          <stringProp name="HTTPSampler.protocol">${ENDPOINT_PROTOCOL}</stringProp>
          <stringProp name="HTTPSampler.path">${ENDPOINT_OWNERS}</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Extract City" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">city</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$[*].city</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">0</stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Extract Address" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">address</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$[*].address</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">0</stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Owner" enabled="true">
          <stringProp name="HTTPSampler.domain">${ENDPOINT_BASE}</stringProp>
          <stringProp name="HTTPSampler.port">${ENDPOINT_PORT}</stringProp>
          <stringProp name="HTTPSampler.protocol">${ENDPOINT_PROTOCOL}</stringProp>
          <stringProp name="HTTPSampler.path">${ENDPOINT_OWNERS}</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;address&quot;: &quot;${address}&quot;,&#xd;
  &quot;city&quot;: &quot;${city}&quot;,&#xd;
  &quot;state&quot;: &quot;${state}&quot;,&#xd;
  &quot;firstName&quot;: &quot;${firstname}&quot;,&#xd;
  &quot;id&quot;: null,&#xd;
  &quot;lastName&quot;: &quot;${lastname}&quot;,&#xd;
  &quot;pets&quot;: [&#xd;
  ],&#xd;
  &quot;telephone&quot;: ${telephone}&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Extract Owner Id" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">owner_id</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET Owner" enabled="true">
          <stringProp name="HTTPSampler.domain">${ENDPOINT_BASE}</stringProp>
          <stringProp name="HTTPSampler.port">${ENDPOINT_PORT}</stringProp>
          <stringProp name="HTTPSampler.protocol">${ENDPOINT_PROTOCOL}</stringProp>
          <stringProp name="HTTPSampler.path">${ENDPOINT_OWNERS}/${owner_id}</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Extract Owner" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">owner</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Update Created Owner" enabled="true">
          <stringProp name="HTTPSampler.domain">${ENDPOINT_BASE}</stringProp>
          <stringProp name="HTTPSampler.port">${ENDPOINT_PORT}</stringProp>
          <stringProp name="HTTPSampler.protocol">${ENDPOINT_PROTOCOL}</stringProp>
          <stringProp name="HTTPSampler.path">${ENDPOINT_OWNERS}/${owner_id}</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">PUT</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${owner}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Delete Created Owner" enabled="true">
          <stringProp name="HTTPSampler.domain">${ENDPOINT_BASE}</stringProp>
          <stringProp name="HTTPSampler.port">${ENDPOINT_PORT}</stringProp>
          <stringProp name="HTTPSampler.protocol">${ENDPOINT_PROTOCOL}</stringProp>
          <stringProp name="HTTPSampler.path">${ENDPOINT_OWNERS}/${owner_id}</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Pet Group" enabled="true">
        <intProp name="ThreadGroup.num_threads">5</intProp>
        <intProp name="ThreadGroup.ramp_time">0</intProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller">
          <stringProp name="LoopController.loops">100</stringProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
      </ThreadGroup>
      <hashTree>
        <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="Random Parameters" enabled="true">
          <collectionProp name="UserParameters.names">
            <stringProp name="1168724782">birth_date</stringProp>
          </collectionProp>
          <collectionProp name="UserParameters.thread_values">
            <collectionProp name="-1659386151">
              <stringProp name="-2014943568">${__RandomDate(&quot;yyyy-MM-dd&quot;,&quot;2003-01-01&quot;,&quot;2018-01-01&quot;,,)}</stringProp>
            </collectionProp>
          </collectionProp>
          <boolProp name="UserParameters.per_iteration">false</boolProp>
        </UserParameters>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET Pet Types" enabled="true">
          <stringProp name="HTTPSampler.domain">${ENDPOINT_BASE}</stringProp>
          <stringProp name="HTTPSampler.port">${ENDPOINT_PORT}</stringProp>
          <stringProp name="HTTPSampler.protocol">${ENDPOINT_PROTOCOL}</stringProp>
          <stringProp name="HTTPSampler.path">${ENDPOINT_PETTYPES}</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Extract Random Pet Type" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">pet_type</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$[*]</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">0</stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET Owners" enabled="true">
          <stringProp name="HTTPSampler.domain">${ENDPOINT_BASE}</stringProp>
          <stringProp name="HTTPSampler.port">${ENDPOINT_PORT}</stringProp>
          <stringProp name="HTTPSampler.protocol">${ENDPOINT_PROTOCOL}</stringProp>
          <stringProp name="HTTPSampler.path">${ENDPOINT_OWNERS}</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Extract Random Owner" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">owner_id</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$[*].id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">0</stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET Pets" enabled="false">
          <stringProp name="HTTPSampler.domain">${ENDPOINT_BASE}</stringProp>
          <stringProp name="HTTPSampler.port">${ENDPOINT_PORT}</stringProp>
          <stringProp name="HTTPSampler.protocol">${ENDPOINT_PROTOCOL}</stringProp>
          <stringProp name="HTTPSampler.path">${ENDPOINT_PETS}</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Pet" enabled="true">
          <stringProp name="HTTPSampler.domain">${ENDPOINT_BASE}</stringProp>
          <stringProp name="HTTPSampler.port">${ENDPOINT_PORT}</stringProp>
          <stringProp name="HTTPSampler.protocol">${ENDPOINT_PROTOCOL}</stringProp>
          <stringProp name="HTTPSampler.path">${ENDPOINT_PETS}</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;birthDate&quot;: ${birth_date},&#xd;
  &quot;id&quot;: null,&#xd;
  &quot;name&quot;: &quot;${pet_name}&quot;,&#xd;
  &quot;type&quot;: ${pet_type},&#xd;
  &quot;ownerId&quot;: ${owner_id}&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Extract Pet Id" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">pet_id</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET Pet" enabled="true">
          <stringProp name="HTTPSampler.domain">${ENDPOINT_BASE}</stringProp>
          <stringProp name="HTTPSampler.port">${ENDPOINT_PORT}</stringProp>
          <stringProp name="HTTPSampler.protocol">${ENDPOINT_PROTOCOL}</stringProp>
          <stringProp name="HTTPSampler.path">${ENDPOINT_PETS}/${pet_id}</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Extract Pet" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">pet</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Update Created Pet" enabled="true">
          <stringProp name="HTTPSampler.domain">${ENDPOINT_BASE}</stringProp>
          <stringProp name="HTTPSampler.port">${ENDPOINT_PORT}</stringProp>
          <stringProp name="HTTPSampler.protocol">${ENDPOINT_PROTOCOL}</stringProp>
          <stringProp name="HTTPSampler.path">${ENDPOINT_PETS}/${pet_id}</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">PUT</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${pet}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Delete Created Pet" enabled="true">
          <stringProp name="HTTPSampler.domain">${ENDPOINT_BASE}</stringProp>
          <stringProp name="HTTPSampler.port">${ENDPOINT_PORT}</stringProp>
          <stringProp name="HTTPSampler.protocol">${ENDPOINT_PROTOCOL}</stringProp>
          <stringProp name="HTTPSampler.path">${ENDPOINT_PETS}/${pet_id}</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Visit Group" enabled="true">
        <intProp name="ThreadGroup.num_threads">5</intProp>
        <intProp name="ThreadGroup.ramp_time">0</intProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller">
          <stringProp name="LoopController.loops">100</stringProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
      </ThreadGroup>
      <hashTree>
        <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="Random Parameters" enabled="true">
          <collectionProp name="UserParameters.names">
            <stringProp name="-1847791070">visit_date</stringProp>
          </collectionProp>
          <collectionProp name="UserParameters.thread_values">
            <collectionProp name="-1558284137">
              <stringProp name="-1864890446">${__RandomDate(&quot;yyyy-MM-dd&quot;,&quot;2015-01-01&quot;,&quot;2018-10-31&quot;,,)}</stringProp>
            </collectionProp>
          </collectionProp>
          <boolProp name="UserParameters.per_iteration">false</boolProp>
        </UserParameters>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET Pets" enabled="true">
          <stringProp name="HTTPSampler.domain">${ENDPOINT_BASE}</stringProp>
          <stringProp name="HTTPSampler.port">${ENDPOINT_PORT}</stringProp>
          <stringProp name="HTTPSampler.protocol">${ENDPOINT_PROTOCOL}</stringProp>
          <stringProp name="HTTPSampler.path">${ENDPOINT_PETS}</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Extract Random Pet" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">pet_id</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$[*].id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">0</stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Visit" enabled="true">
          <stringProp name="HTTPSampler.domain">${ENDPOINT_BASE}</stringProp>
          <stringProp name="HTTPSampler.port">${ENDPOINT_PORT}</stringProp>
          <stringProp name="HTTPSampler.protocol">${ENDPOINT_PROTOCOL}</stringProp>
          <stringProp name="HTTPSampler.path">${ENDPOINT_VISITS}</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;date&quot;: ${visit_date},&#xd;
  &quot;description&quot;: &quot;Description of the visit&quot;,&#xd;
  &quot;id&quot;: null,&#xd;
  &quot;petId&quot;: ${pet_id}&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Extract Visit Id" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">visit_id</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">0</stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET Visit" enabled="true">
          <stringProp name="HTTPSampler.domain">${ENDPOINT_BASE}</stringProp>
          <stringProp name="HTTPSampler.port">${ENDPOINT_PORT}</stringProp>
          <stringProp name="HTTPSampler.protocol">${ENDPOINT_PROTOCOL}</stringProp>
          <stringProp name="HTTPSampler.path">${ENDPOINT_VISITS}/${visit_id}</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Extract Visit" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">visit</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">0</stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Update Created Visit" enabled="true">
          <stringProp name="HTTPSampler.domain">${ENDPOINT_BASE}</stringProp>
          <stringProp name="HTTPSampler.port">${ENDPOINT_PORT}</stringProp>
          <stringProp name="HTTPSampler.protocol">${ENDPOINT_PROTOCOL}</stringProp>
          <stringProp name="HTTPSampler.path">${ENDPOINT_VISITS}/${visit_id}</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">PUT</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${visit}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET Visits" enabled="true">
          <stringProp name="HTTPSampler.domain">${ENDPOINT_BASE}</stringProp>
          <stringProp name="HTTPSampler.port">${ENDPOINT_PORT}</stringProp>
          <stringProp name="HTTPSampler.protocol">${ENDPOINT_PROTOCOL}</stringProp>
          <stringProp name="HTTPSampler.path">${ENDPOINT_VISITS}</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Delete Created Visit" enabled="true">
          <stringProp name="HTTPSampler.domain">${ENDPOINT_BASE}</stringProp>
          <stringProp name="HTTPSampler.port">${ENDPOINT_PORT}</stringProp>
          <stringProp name="HTTPSampler.protocol">${ENDPOINT_PROTOCOL}</stringProp>
          <stringProp name="HTTPSampler.path">${ENDPOINT_VISITS}/${visit_id}</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Vet Group" enabled="true">
        <intProp name="ThreadGroup.num_threads">5</intProp>
        <intProp name="ThreadGroup.ramp_time">0</intProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller">
          <stringProp name="LoopController.loops">100</stringProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET Specialties" enabled="true">
          <stringProp name="HTTPSampler.domain">${ENDPOINT_BASE}</stringProp>
          <stringProp name="HTTPSampler.port">${ENDPOINT_PORT}</stringProp>
          <stringProp name="HTTPSampler.protocol">${ENDPOINT_PROTOCOL}</stringProp>
          <stringProp name="HTTPSampler.path">${ENDPOINT_SPECIALITY}</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Extract Random Specality Id" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">speciality</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$[*]</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">0</stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Vet" enabled="true">
          <stringProp name="HTTPSampler.domain">${ENDPOINT_BASE}</stringProp>
          <stringProp name="HTTPSampler.port">${ENDPOINT_PORT}</stringProp>
          <stringProp name="HTTPSampler.protocol">${ENDPOINT_PROTOCOL}</stringProp>
          <stringProp name="HTTPSampler.path">${ENDPOINT_VETS}</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;firstName&quot;: &quot;${firstname}&quot;,&#xd;
  &quot;id&quot;: null,&#xd;
  &quot;lastName&quot;: &quot;${lastname}&quot;,&#xd;
  &quot;specialties&quot;: [&#xd;
    ${speciality}&#xd;
  ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Extract generated Vet Id" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">vet_id</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET Vets" enabled="true">
          <stringProp name="HTTPSampler.domain">${ENDPOINT_BASE}</stringProp>
          <stringProp name="HTTPSampler.port">${ENDPOINT_PORT}</stringProp>
          <stringProp name="HTTPSampler.protocol">${ENDPOINT_PROTOCOL}</stringProp>
          <stringProp name="HTTPSampler.path">${ENDPOINT_VETS}</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Extract Random Vet Id" enabled="false">
            <stringProp name="JSONPostProcessor.referenceNames">vet_id</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$[*].id</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">0</stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET Vet" enabled="true">
          <stringProp name="HTTPSampler.domain">${ENDPOINT_BASE}</stringProp>
          <stringProp name="HTTPSampler.port">${ENDPOINT_PORT}</stringProp>
          <stringProp name="HTTPSampler.protocol">${ENDPOINT_PROTOCOL}</stringProp>
          <stringProp name="HTTPSampler.path">${ENDPOINT_VETS}/${vet_id}</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="Extract Vet" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">vet</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">0</stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Update Created Vet" enabled="true">
          <stringProp name="HTTPSampler.domain">${ENDPOINT_BASE}</stringProp>
          <stringProp name="HTTPSampler.port">${ENDPOINT_PORT}</stringProp>
          <stringProp name="HTTPSampler.protocol">${ENDPOINT_PROTOCOL}</stringProp>
          <stringProp name="HTTPSampler.path">${ENDPOINT_VETS}/${vet_id}</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">PUT</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${vet}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Delete Created Vet" enabled="true">
          <stringProp name="HTTPSampler.domain">${ENDPOINT_BASE}</stringProp>
          <stringProp name="HTTPSampler.port">${ENDPOINT_PORT}</stringProp>
          <stringProp name="HTTPSampler.protocol">${ENDPOINT_PROTOCOL}</stringProp>
          <stringProp name="HTTPSampler.path">${ENDPOINT_VETS}/${vet_id}</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree/>
      </hashTree>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="false">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="RespTimeGraphVisualizer" testclass="ResultCollector" testname="Response Time Graph" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
        <stringProp name="RespTimeGraph.interval">1000</stringProp>
      </ResultCollector>
      <hashTree/>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
